# Archivos compilados por bytes / optimizados / DLL
__pycache__/
*.py[cod]
*$py.class

# Extensiones C
*.so

# Distribución / empaquetado
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Normalmente, estos archivos se escriben con un script de Python a partir de una plantilla
#  antes de que el PyInstaller cree un archivo *.exe para añadirle la fecha u otra información.
*.manifest
*.spec

# Registros del instalador
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   De acuerdo con pypa/pipenv#598, se recomienda incluir Pipfile.lock en el control de versiones.
#   Sin embargo, en caso de colaboración, si se tienen dependencias específicas de la plataforma o dependencias
#   que no tienen soporte multiplataforma, es posible que pipenv instale dependencias que no funcionen, o que no
#   instale todas las dependencias necesarias.
#Pipfile.lock

# PEP 582; utilizado, por ejemplo, po. github.com/David-OConnor/pyflow
__pypackages__/

# Cosas de Celery
celerybeat-schedule
celerybeat.pid

# Archivos analizados por SageMath
*.sage.py

# Entornos
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Configuración del proyecto Spyder
.spyderproject
.spyproject

# Configuración del proyecto Rope
.ropeproject

# Documentación de MkDocs
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Comprobador de tipos Pyre
.pyre/

.idea
